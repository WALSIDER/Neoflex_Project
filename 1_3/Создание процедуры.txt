create or replace procedure dm.fill_f101_round_f(i_ondate date)
language plpgsql
as $$
declare
    v_from_date date := (i_ondate - interval '1 month')::date;
    v_to_date date := (i_ondate - interval '1 day')::date;
begin
    delete from dm.dm_f101_round_f where to_date = v_to_date;

    insert into dm.dm_f101_round_f (
        from_date, to_date, chapter, ledger_account, characteristic,
        balance_in_rub, balance_in_val, balance_in_total,
        turn_deb_rub, turn_deb_val, turn_deb_total,
        turn_cre_rub, turn_cre_val, turn_cre_total,
        balance_out_rub, balance_out_val, balance_out_total
    )
    select
        v_from_date,
        v_to_date,
        la.chapter,
        substr(a.account_number, 1, 5) as ledger_account,
        a.char_type as characteristic,

        sum(case when a.currency_code in ('810', '643') then b_in.balance_out_rub else 0 end) as balance_in_rub,
        sum(case when a.currency_code not in ('810', '643') then b_in.balance_out_rub else 0 end) as balance_in_val,
        sum(b_in.balance_out_rub) as balance_in_total,

        sum(case when a.currency_code in ('810', '643') then t.debet_amount_rub else 0 end) as turn_deb_rub,
        sum(case when a.currency_code not in ('810', '643') then t.debet_amount_rub else 0 end) as turn_deb_val,
        sum(t.debet_amount_rub) as turn_deb_total,

        sum(case when a.currency_code in ('810', '643') then t.credit_amount_rub else 0 end) as turn_cre_rub,
        sum(case when a.currency_code not in ('810', '643') then t.credit_amount_rub else 0 end) as turn_cre_val,
        sum(t.credit_amount_rub) as turn_cre_total,

        sum(case when a.currency_code in ('810', '643') then b_out.balance_out_rub else 0 end) as balance_out_rub,
        sum(case when a.currency_code not in ('810', '643') then b_out.balance_out_rub else 0 end) as balance_out_val,
        sum(b_out.balance_out_rub) as balance_out_total

    from ds.md_account_d a
    join ds.md_ledger_account_s la on la.ledger_account = substr(a.account_number, 1, 5)::int
    left join dm.dm_account_balance_f b_in on b_in.account_rk = a.account_rk and b_in.on_date = v_from_date - interval '1 day'
    left join dm.dm_account_turnover_f t on t.account_rk = a.account_rk and t.on_date between v_from_date and v_to_date
    left join dm.dm_account_balance_f b_out on b_out.account_rk = a.account_rk and b_out.on_date = v_to_date

    where a.data_actual_date <= v_to_date
      and coalesce(a.data_actual_end_date, v_to_date) >= v_from_date

    group by la.chapter, substr(a.account_number, 1, 5), a.char_type;

    insert into logs.runs_log(start_date, end_date, discription)
    values (current_timestamp, current_timestamp, '101 форма за период ' || v_from_date || ' - ' || v_to_date || ' рассчитана.');

    raise notice '101 форма за период % - % рассчитана.', v_from_date, v_to_date;
end;
$$;

call dm.fill_f101_round_f('2018-02-01');

select * from dm.dm_f101_round_f;
select * from logs.runs_log;