CREATE TABLE DS.FT_BALANCE_F (
    on_date DATE NOT NULL,
    account_rk NUMERIC(18,0) NOT NULL,
    currency_rk NUMERIC(18,0),
    balance_out FLOAT,
	PRIMARY KEY (on_date, account_rk)
);

select * from DS.FT_BALANCE_F

TRUNCATE DS.FT_BALANCE_F RESTART IDENTITY;



CREATE TABLE DS.FT_POSTING_F (
    oper_date DATE NOT NULL,
    credit_account_rk NUMERIC(18,0) NOT NULL,
    debet_account_rk NUMERIC(18,0) NOT NULL,
    credit_amount FLOAT,
    debet_amount FLOAT
);

select * from DS.FT_POSTING_F

TRUNCATE DS.FT_POSTING_F RESTART IDENTITY;



CREATE TABLE DS.MD_ACCOUNT_D (
    data_actual_date DATE NOT NULL,
    data_actual_end_date DATE NOT NULL,
    account_rk NUMERIC(18,0) NOT NULL,
    account_number VARCHAR(20) NOT NULL,
    char_type VARCHAR(1) NOT NULL,
    currency_rk NUMERIC(18,0) NOT NULL,
    currency_code VARCHAR(3) NOT NULL,
	PRIMARY KEY (data_actual_date, account_rk)
);

select * from DS.MD_ACCOUNT_D

TRUNCATE DS.MD_ACCOUNT_D RESTART IDENTITY;



CREATE TABLE DS.MD_CURRENCY_D (
    currency_rk NUMERIC(18,0) NOT NULL,
    data_actual_date DATE NOT NULL,
    data_actual_end_date DATE,
    currency_code VARCHAR(3),
    code_iso_char VARCHAR(3),
	PRIMARY KEY (data_actual_date, currency_rk)
);

select * from DS.MD_CURRENCY_D

TRUNCATE DS.MD_CURRENCY_D RESTART IDENTITY;



CREATE TABLE DS.MD_EXCHANGE_RATE_D (
    data_actual_date DATE NOT NULL,
    data_actual_end_date DATE,
    currency_rk NUMERIC(18,0) NOT NULL,
    reduced_cource FLOAT,
    code_iso_num VARCHAR(3),
	PRIMARY KEY (data_actual_date, currency_rk)
);

select * from DS.MD_EXCHANGE_RATE_D

TRUNCATE DS.MD_EXCHANGE_RATE_D RESTART IDENTITY;



CREATE TABLE DS.MD_LEDGER_ACCOUNT_S (
    chapter CHAR(1),
    chapter_name VARCHAR(16),
    section_number INTEGER,
    section_name VARCHAR(22),
    subsection_name VARCHAR(21),
    ledger1_account INTEGER,
    ledger1_account_name VARCHAR(47),
    ledger_account INTEGER NOT NULL,
    ledger_account_name VARCHAR(153),
    characteristic CHAR(1),
    is_resident INTEGER,
    is_reserve INTEGER,
    is_reserved INTEGER,
    is_loan INTEGER,
    is_reserved_assets INTEGER,
    is_overdue INTEGER,
    is_interest INTEGER,
    pair_account VARCHAR(5),
    start_date DATE NOT NULL,
    end_date DATE,
    is_rub_only INTEGER,
    min_term VARCHAR(1),
    min_term_measure VARCHAR(1),
    max_term VARCHAR(1),
    max_term_measure VARCHAR(1),
    ledger_acc_full_name_translit VARCHAR(1),
    is_revaluation VARCHAR(1),
    is_correct VARCHAR(1),
	PRIMARY KEY (ledger_account, start_date)
);

select * from DS.MD_LEDGER_ACCOUNT_S

TRUNCATE DS.MD_LEDGER_ACCOUNT_S RESTART IDENTITY;


ALTER USER ds WITH PASSWORD '123';

GRANT USAGE ON SCHEMA ds TO ds;
GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA ds TO ds;
GRANT ALL privileges ON SCHEMA ds TO ds;
GRANT ALL privileges ON TABLE ds.ft_posting_f TO ds;
GRANT USAGE, SELECT, UPDATE ON SEQUENCE ds.runs_log_run_id_seq TO ds;

create role logs login password '123';
create schema logs authorization logs; 

GRANT USAGE ON SCHEMA logs TO logs;
GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA logs TO logs;
GRANT ALL ON SCHEMA logs TO logs;
GRANT USAGE, SELECT, UPDATE ON SEQUENCE logs.runs_log_run_id_seq TO logs;
GRANT ALL privileges ON SCHEMA logs TO logs;
GRANT ALL privileges ON TABLE logs.runs_log TO logs;



CREATE TABLE LOGS.runs_log (
	run_id SERIAL NOT NULL,
	start_date timestamp PRIMARY KEY NOT NULL,
	end_date timestamp 
);

select * from logs.runs_log 

TRUNCATE logs.runs_log RESTART IDENTITY; 